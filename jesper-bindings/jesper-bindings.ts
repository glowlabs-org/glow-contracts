//-----------------------------------------------------//
// This file was generated by the solidity_error_to_string
// tool written by @0xSimon on twitter.
//
// The tool can be found at:
//-----------------------------------------------------//

export type SolidityMessageAndArgs = {
  errorMessage: string;
  args: {
    name: string;
    type: string;
    internalType: string;
  }[];
};

export type FullJesperError = {
  errorName: string;
  solidityMessageAndArgs: SolidityMessageAndArgs;
};

export type JesperObject = {
  [key: string]: FullJesperError;
};

export const errors: JesperObject = {
  '0x20551315': {
    errorName: 'ProposalAlreadyVetoed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe570110f': {
    errorName: 'SafeERC20FailedDecreaseAllowance(address,uint256,uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'spender',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'currentAllowance',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'requestedDecrease',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x73cfea71': {
    errorName: 'InvalidToken()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xf8638ff2': {
    errorName: 'SignerNotGCA()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x7866f889': {
    errorName: 'InvalidConstantProductFormula()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3646d782': {
    errorName: 'RatifyOrRejectPeriodNotEnded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xf4e984f2': {
    errorName: 'ZeroAddressInConstructor()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3e31884e': {
    errorName: 'ERC1155InvalidApprover(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'approver',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x6474e7eb': {
    errorName: 'USDCWeightGreaterThanTotalWeight()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x51618d53': {
    errorName: 'ProposalAlreadyExecuted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xcc776bc9': {
    errorName: 'HashesNotUpdated()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xfc85ee95': {
    errorName: 'UserPriceNotHighEnough()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x0a7d3525': {
    errorName: 'HashMismatch()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xcd6064a4': {
    errorName: 'CannotClaimZeroTokens()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xaa29e9f8': {
    errorName: 'MaxCouncilMembersExceeded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xfb7f5079': {
    errorName: 'SafeTransferFailed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6dfcc650': {
    errorName: 'SafeCastOverflowedUintDowncast(uint8,uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'bits',
          type: 'uint8',
          internalType: 'uint8',
        },
        {
          name: 'value',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0xb6bb2fb0': {
    errorName: 'InvalidProof()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3e9283f4': {
    errorName: 'InsufficientClaimableBalance()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x7e273289': {
    errorName: 'ERC721NonexistentToken(uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'tokenId',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x28a72379': {
    errorName: 'ProposalExpired()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x44c16c11': {
    errorName: 'CommitPermitSignatureExpired()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6e48d7c5': {
    errorName: 'BucketAlreadyFinalized()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x24775e06': {
    errorName: 'SafeCastOverflowedUintToInt(uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'value',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0xe602df05': {
    errorName: 'ERC20InvalidApprover(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'approver',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x48121c80': {
    errorName: 'SignatureDoesNotMatchUser()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe6db6490': {
    errorName: 'CallerNotGCA()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa8ce4432': {
    errorName: 'SafeCastOverflowedIntToUint(int256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'value',
          type: 'int256',
          internalType: 'int256',
        },
      ],
    },
  },
  '0xf4ffcdea': {
    errorName: 'InvalidRelaySignature()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xfa035d1a': {
    errorName: 'ErrPermanentlyFrozen()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6032dc5a': {
    errorName: 'ProposalsMustBeExecutedSynchonously()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xebfbbd42': {
    errorName: 'ProposalDoesNotExist()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x62791302': {
    errorName: 'ERC2612ExpiredSignature(uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'deadline',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x3f4d6053': {
    errorName: 'HashMismatch()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x7a8ed5d8': {
    errorName: 'MaxSlashesInGCAElection()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xcd786059': {
    errorName: 'AddressInsufficientBalance(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'account',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0xcd9b4680': {
    errorName: 'UserPriceNotHighEnough()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x9472ad34': {
    errorName: 'ProposalNotMostPopular()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x8851d920': {
    errorName: 'MaxSevenVetoCouncilMembers()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x35f3f70b': {
    errorName: 'ElectricityFuturesAuctionBidTooLow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x0f2ca6e7': {
    errorName: 'WithdrawalNotReady()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xc89d624b': {
    errorName: 'EmptyRoot()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xb3512b0c': {
    errorName: 'InvalidShortString()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa60f030c': {
    errorName: 'ERC20FailedDecreaseAllowance(address,uint256,uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'spender',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'currentAllowance',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'requestedDecrease',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0xe7e8d14b': {
    errorName: 'ContractsAlreadySet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xeb813eb3': {
    errorName: 'SignatureDoesNotMatchUser()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x0a927e68': {
    errorName: 'VetoMemberCannotBeNullAddress()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3bc996a9': {
    errorName: 'NetworkIsFrozen()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6f9401bc': {
    errorName: 'PrecisionLossLeadToUnderflow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xdff45e0c': {
    errorName: 'ShiftHasNotStarted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xb1ca8fcf': {
    errorName: 'BucketSubmissionEnded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x36350e48': {
    errorName: 'CannotDelayEmptyBucket()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x5137f176': {
    errorName: 'InsufficientAmountA()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xebf5f399': {
    errorName: 'InsufficientLiquidityBurned()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x820fa933': {
    errorName: 'InvalidSpendNominationsOnProposalSignature()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xdb8ee110': {
    errorName: 'InvalidRelaySignature()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xf1bc40d1': {
    errorName: 'ProposalAlreadyExecuted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x09bde339': {
    errorName: 'InvalidProof()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x260d3f37': {
    errorName: 'USDCWeightOverflow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x19d76113': {
    errorName: 'ElectricityFuturesSignatureExpired()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x03dee4c5': {
    errorName: 'ERC1155InsufficientBalance(address,uint256,uint256,uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'sender',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'balance',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'needed',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'tokenId',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x69b600a4': {
    errorName: 'AlreadyEndorsedWeek()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa217a141': {
    errorName: 'CommitSignatureInvalid()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x94aeaa34': {
    errorName: 'IncorrectDecimals()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xfb8f41b2': {
    errorName: 'ERC20InsufficientAllowance(address,uint256,uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'spender',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'allowance',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'needed',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x2bacdf67': {
    errorName: 'CallerNotVetoCouncil()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x5b08ba18': {
    errorName: 'ERC721InvalidOperator(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'operator',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x936524fd': {
    errorName: 'BucketAlreadyMinted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x038a66dd': {
    errorName: 'BucketAlreadyFinalized()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe66d943f': {
    errorName: 'NotUSDCToken()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3fb087f4': {
    errorName: 'NoRewards()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xf3ac1b52': {
    errorName: 'VetoCouncilElectionsCannotBeVetoed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x1fdd7d63': {
    errorName: 'MemberNotFound()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xad672c30': {
    errorName: 'ProposalHashesEmpty()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x825e0111': {
    errorName: 'GlowWeightOverflow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x1e03a2b2': {
    errorName: 'ElectricityFuturesAuctionAuthorizationTooLong()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x5660a375': {
    errorName: 'ReportGCCMustBeLT200Billion()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x1b89f837': {
    errorName: 'BucketIndexOutOfBounds()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xb17724af': {
    errorName: 'BucketAlreadyDelayed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa53ccf43': {
    errorName: 'IndexDoesNotMatchNextProposalIndex()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x126860a4': {
    errorName: 'AddressNotSet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x01a83514': {
    errorName: 'ERC1155InvalidSender(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'sender',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x009835dc': {
    errorName: 'CannotDelayBucketThatNeedsToUpdateSlashNonce()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x0ff49839': {
    errorName: 'BucketAlreadyDelayed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x8579befe': {
    errorName: 'ZeroAddressNotAllowed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa9880448': {
    errorName: 'ProposalHasNotExpired(uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'proposalId',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x6efc8790': {
    errorName: 'GCCAlreadySet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x864a6163': {
    errorName: 'CallerNotGrantsTreasury()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x60d3cf1e': {
    errorName: 'CannotSetNonceToZero()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x292d0d13': {
    errorName: 'WeekNotFinalized()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xdb8682d4': {
    errorName: 'CallerNotEarlyLiquidity()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xd2506c77': {
    errorName: 'NotEnoughGCCForSale()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x77339867': {
    errorName: 'ContractsAlreadySet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x620bc496': {
    errorName: 'InsufficientNominations()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x89c62b64': {
    errorName: 'ERC721InvalidOwner(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'owner',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0xa8b47d63': {
    errorName: 'ZeroAddress()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x53ce4ece': {
    errorName: 'EmptyRoot()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x31715d5c': {
    errorName: 'ProposalsMustBeExecutedSynchonously()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x66526891': {
    errorName: 'ElectricityFutureAuctionBidMustBeGreaterThanMinimumBid()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x0dc149f0': {
    errorName: 'AlreadyInitialized()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe9a21d53': {
    errorName: 'InvalidUserIndex()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x4e0621e3': {
    errorName: 'AlreadyAnAgent()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x9c5b4622': {
    errorName: 'CannotReferSelf()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3592b417': {
    errorName: 'ElectricityFuturesAuctionInvalidSignature()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x49900a87': {
    errorName: 'DuplicatePair()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x39996567': {
    errorName: 'InsufficientShares()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe22e27eb': {
    errorName: 'StringsInsufficientHexLength(uint256,uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'value',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'length',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x74175e97': {
    errorName: 'AlreadyEndorsedWeek()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xfbe8cdcb': {
    errorName: 'CallerMustBeVetoCouncilMember()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x7f292081': {
    errorName: 'BalanceOverflow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xf5b9b3d2': {
    errorName: 'GlowWeightOverflow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x483313f3': {
    errorName: 'InvalidAmount()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xdb12cf27': {
    errorName: 'NoRewards()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x101dbe5e': {
    errorName: 'ReportGCCMustBeLT200Billion()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x424b34ab': {
    errorName: 'CannotDelayBucketThatNeedsToUpdateSlashNonce()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x9d4aa6c4': {
    errorName: 'ErrCannotSwapZero()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xaf7ecada': {
    errorName: 'CallerNotGovernance()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x86f8152e': {
    errorName: 'NothingToClaim()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xdc334245': {
    errorName: 'CannotReferSelf()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x177e802f': {
    errorName: 'ERC721InsufficientApproval(address,uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'operator',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'tokenId',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x04c66fe1': {
    errorName: 'GCAContractAlreadySet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x4b800e46': {
    errorName: 'ERC2612InvalidSigner(address,address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'signer',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'owner',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x34c90624': {
    errorName: 'InsufficientAmountB()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xaf6ed3e6': {
    errorName: 'InvalidConstantProductFormula()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xae474820': {
    errorName: 'ProposalHashesNotUpdated()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xdb675414': {
    errorName: 'WeekNotStarted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xf62c2d82': {
    errorName: 'AddressAlreadySet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x2bb38ec6': {
    errorName: 'CommitAllowanceUnderflow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xbf87f0f4': {
    errorName: 'InsufficientLiquidity()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xd92e233d': {
    errorName: 'ZeroAddress()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x8f66ec14': {
    errorName: 'InsufficientAmountA()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x63a7d358': {
    errorName: 'NotAnAgent()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x80c3ccd7': {
    errorName: 'CallerNotGCA()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x88ccd575': {
    errorName: 'GCACouncilElectionsCannotBeVetoed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x80dc8fb5': {
    errorName: 'ShiftHasNotStarted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x141e72b2': {
    errorName: 'CallerNotVetoCouncil()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xacf931cc': {
    errorName: 'WithdrawalNotReady()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x7d3bdde5': {
    errorName: 'ErrIsContract()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xd229fe47': {
    errorName: 'ReportWeightMustBeLTUint64MaxDiv5()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa5ae73cd': {
    errorName: 'VetoCouncilProposalCreationOldMemberCannotEqualNewMember()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xc9e2f204': {
    errorName: 'InsufficientRatifyOrRejectVotes()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x2ef0fd7f': {
    errorName: 'GlowWeightGreaterThanTotalWeight()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xde2f58b1': {
    errorName: 'SpendNominationsOnProposalSignatureExpired()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xcbc34222': {
    errorName: 'WeekNotFinalized()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x7ec03745': {
    errorName: 'CallerMustBeVetoCouncilMember()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xced3e100': {
    errorName: 'ERC1155InvalidOperator(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'operator',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x6d47e1ae': {
    errorName: 'BucketSubmissionNotOpen()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x111c9691': {
    errorName: 'CannotClaimZeroTokens()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xc98cb2a4': {
    errorName: 'ElectricityFuturesAuctionBidTooLow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xbbe6c638': {
    errorName: 'CannotStakeZeroTokens()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x0dc1e83a': {
    errorName: 'SignerNotGCA()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x52129102': {
    errorName: 'RFCPeriodNotEnded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x562ece0a': {
    errorName: 'GCACouncilElectionsCannotBeVetoed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xcb433150': {
    errorName: 'ProposalIdDoesNotMatchMostPopularProposal()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x536bfd7d': {
    errorName: 'CannotBuyZeroUnits()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xbf2f7db1': {
    errorName: 'ProposalAlreadyUpdated()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x9996b315': {
    errorName: 'AddressEmptyCode(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'target',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x9c4e4d00': {
    errorName: 'MaxCouncilMembersExceeded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x4c5312ed': {
    errorName: 'IndexDoesNotMatchNextProposalIndex()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x1a95f50c': {
    errorName: 'RatifyOrRejectPeriodEnded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x7ff38ffb': {
    errorName: 'USDCWeightOverflow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x4b1c64be': {
    errorName: 'OnlyMinerPoolCanAddHoldings()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x78a65193': {
    errorName: 'GCAContractAlreadySet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x61f8b657': {
    errorName: 'NetworkIsFrozen()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3bc195f7': {
    errorName: 'USDCWeightGreaterThanTotalWeight()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x7caf5a70': {
    errorName: 'InvalidSpendNominationsOnProposalSignature()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xceaef865': {
    errorName: 'CallerNotGCC()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x34b37818': {
    errorName: 'BucketSubmissionNotOpen()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x41d07501': {
    errorName: 'MaxGCAEndorsementsReached()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x88558ee9': {
    errorName: 'AddressNotSet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xf183c8b0': {
    errorName: 'Expired()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x15bce54e': {
    errorName: 'ModNotZero()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6ab12139': {
    errorName: 'DuplicateAddressNotAllowed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3f26b91e': {
    errorName: 'TooFewAgents()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe30d9137': {
    errorName: 'SlashedAgentCannotClaimReward()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x813c7dbd': {
    errorName: 'MostPopularProposalNotSelected()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xec442f05': {
    errorName: 'ERC20InvalidReceiver(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'receiver',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0xc1ab6dc1': {
    errorName: 'InvalidToken()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x4cd68d80': {
    errorName: 'AlreadyWithdrawnFromHolding()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x96f644fd': {
    errorName: 'TooManyAgents()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3f7cf00a': {
    errorName: 'DelayStillOnCooldown()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xcc3edcc4': {
    errorName: 'CallerNotGCAAtIndex()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6d3e6293': {
    errorName: 'ProposalIsVetoed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x51ab315c': {
    errorName: 'CallerNotGrantsTreasury()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xeffa4879': {
    errorName: 'OnlyGCAElectionsCanBeEndorsed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x57f447ce': {
    errorName: 'ERC1155InvalidReceiver(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'receiver',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0xaece1bd5': {
    errorName: 'ElectricityFuturesAuctionEnded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xb34ea774': {
    errorName: 'DelayStillOnCooldown()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6867b330': {
    errorName: 'WeekNotStarted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x796ffca1': {
    errorName: 'InsufficientNominations()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x843b801b': {
    errorName: 'HashesNotUpdated()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xd1428d82': {
    errorName: 'ProposalExpired()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x16a02fde': {
    errorName: 'BucketNotFinalized()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa312070f': {
    errorName: 'CallerNotGCAAtIndex()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xbf7933ee': {
    errorName: 'NoBalanceToPayout()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xdf345efe': {
    errorName: 'AllocationCannotBeZero()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xb012ea23': {
    errorName: 'CannotUnstakeZeroTokens()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x82d2be18': {
    errorName: 'TooManyIncrements()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x12498cab': {
    errorName: 'InvalidShares()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6fa56d6e': {
    errorName: 'DuplicatePair()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xbb55fd27': {
    errorName: 'InsufficientLiquidity()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x188d7f4f': {
    errorName: 'InvalidGCAHash()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x1b40804d': {
    errorName: 'CallerNotGCAContract()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe237d922': {
    errorName: 'ERC1155MissingApprovalForAll(address,address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'operator',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'owner',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x44333a25': {
    errorName: 'SwapToSelf()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x2390f0b7': {
    errorName: 'ProposalNotInitialized()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x06f29f91': {
    errorName: 'NotGCA()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x30a8b0dc': {
    errorName: 'RatifyOrRejectPeriodEnded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x2d3ff6f8': {
    errorName: 'BucketSubmissionEnded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x4cdf5489': {
    errorName: 'ErrPermanentlyFrozen()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xeced761d': {
    errorName: 'CallerNotEarlyLiquidity()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x17fbc1c4': {
    errorName: 'InsufficientAmountB()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xb3723c6b': {
    errorName: 'AllSold()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x118cdaa7': {
    errorName: 'OwnableUnauthorizedAccount(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'account',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x17b5994a': {
    errorName: 'NotEnoughImpactPowerFromCommitment()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xc0c1a6dd': {
    errorName: 'RatifyOrRejectPeriodNotEnded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x089484c8': {
    errorName: 'GlowWeightGreaterThanTotalWeight()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x74481f4a': {
    errorName: 'ProposalAlreadyVetoed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe7689acd': {
    errorName: 'MustIncreaseCommitAllowanceByAtLeastOne()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x11a12cfc': {
    errorName: 'MaxSlashesInGCAElection()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3934b931': {
    errorName: 'ReleasePeriodNotStarted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x701ef0cf': {
    errorName: 'ProposalIsVetoed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe23124ad': {
    errorName: 'ElectricityFuturesAuctionAuthorizationTooLong()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x64a0ae92': {
    errorName: 'ERC721InvalidReceiver(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'receiver',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x2a27735f': {
    errorName: 'TooManyIncrements()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xd9c78e02': {
    errorName: 'ProposalDoesNotExist()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x5b059991': {
    errorName: 'ERC1155InvalidArrayLength(uint256,uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'idsLength',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'valuesLength',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x436093a5': {
    errorName: 'IncorrectDecimals()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x5ab88588': {
    errorName: 'GCCAlreadySet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x1425ea42': {
    errorName: 'FailedInnerCall()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3f74dab4': {
    errorName: 'MaxSevenVetoCouncilMembers()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xd78bce0c': {
    errorName: 'ECDSAInvalidSignatureS(bytes32)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 's',
          type: 'bytes32',
          internalType: 'bytes32',
        },
      ],
    },
  },
  '0xe09cc45f': {
    errorName: 'ZeroAddressInConstructor()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa1db7253': {
    errorName: 'ProposalNotMostPopular()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x33ee453e': {
    errorName: 'CannotSetNonceToZero()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xaab28a45': {
    errorName: 'SpendNominationsOnProposalSignatureExpired()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x952b12c4': {
    errorName: 'ProposalHashesEmpty()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x752d88c0': {
    errorName: 'InvalidAccountNonce(address,uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'account',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'currentNonce',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x4e1ad8b0': {
    errorName: 'ToCannotBeUSDCReceiver()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x749383ad': {
    errorName: 'InsufficientLiquidityBurned()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xd226f9d4': {
    errorName: 'InsufficientLiquidityMinted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xd1c62825': {
    errorName: 'NominationCostGreaterThanAllowance()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xdb391df9': {
    errorName: 'MostPopularProposalNotSelected()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x73c6ac6e': {
    errorName: 'ERC721InvalidSender(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'sender',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0xfce698f7': {
    errorName: 'ECDSAInvalidSignatureLength(uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'length',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x89560ca1': {
    errorName: 'BalanceOverflow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xc75d5b3a': {
    errorName: 'NoBalanceToPayout()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6f902b75': {
    errorName: 'UserAlreadyClaimed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x80c61bee': {
    errorName: 'InvalidUserIndex()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xdd7b0cd3': {
    errorName: 'CallerNotGCC()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xf645eedf': {
    errorName: 'ECDSAInvalidSignature()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x02a768c4': {
    errorName: 'ProposalHashDoesNotMatch()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe6a2daf9': {
    errorName: 'ModNotZero()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x64283d7b': {
    errorName: 'ERC721IncorrectOwner(address,uint256,address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'sender',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'tokenId',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'owner',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0xf2e36f93': {
    errorName: 'ReportWeightMustBeLTUint64MaxDiv5()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xccf0a889': {
    errorName: 'NotUSDCToken()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6fa94eb4': {
    errorName: 'SafeTransferFromFailed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xca5e951d': {
    errorName: 'ZeroAddressNotAllowed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x735375ff': {
    errorName: 'MemberNotFound()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x0630d39a': {
    errorName: 'InvalidGCAHash()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x457945d6': {
    errorName: 'OnlyGCAElectionsCanBeEndorsed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa9fbf51f': {
    errorName: 'ERC721InvalidApprover(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'approver',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0xa363a16f': {
    errorName: 'ElectricityFuturesAuctionInvalidSignature()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x5274afe7': {
    errorName: 'SafeERC20FailedOperation(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'token',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x895076c0': {
    errorName: 'CannotUnstakeZeroTokens()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x0622c329': {
    errorName: 'CallerNotVetoCouncilMember()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xf5d22eaa': {
    errorName: 'SwapToSelf()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x1e4fbdf7': {
    errorName: 'OwnableInvalidOwner(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'owner',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x6edcc523': {
    errorName: 'InvalidShares()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xd7e6bcf8': {
    errorName: 'NotInitializing()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x24fe1192': {
    errorName: 'PriceTooHigh()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xf4059071': {
    errorName: 'SafeTransferFromFailed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x7b8a8aa6': {
    errorName: 'WeekMustHaveEndedToAcceptRatifyOrRejectVotes()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xaa77fc5a': {
    errorName: 'CannotDelayEmptyBucket()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x1446355b': {
    errorName: 'MaxGCAEndorsementsReached()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x611e1857': {
    errorName: 'ErrNotVetoCouncilMember()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6d2e02ad': {
    errorName: 'NotEnoughImpactPowerFromCommitment()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x62a62f74': {
    errorName: 'ProposalAlreadyUpdated()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xbbb5a50e': {
    errorName: 'CommitPermitSignatureExpired()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x987cd0b3': {
    errorName: 'MaximumNumberOfGCAS()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x0907fef2': {
    errorName: 'NotAnAgent()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x8d7f78f4': {
    errorName: 'UnstakingOnEmergencyCooldown()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x801332f9': {
    errorName: 'VetoCouncilElectionsCannotBeVetoed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xb7d0ea71': {
    errorName: 'WeekMustHaveEndedToAcceptRatifyOrRejectVotes()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xdee388bd': {
    errorName: 'AllSold()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x62a7556c': {
    errorName: 'MinerPoolAlreadySet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x34fa9bbe': {
    errorName: 'ProposalIdDoesNotMatchMostPopularProposal()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x7759264f': {
    errorName: 'CompensationPlanLengthMustBeGreaterThanZero()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xd730e5d8': {
    errorName: 'AllocationCannotBeZero()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x529d00b9': {
    errorName: 'InsufficientShares()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x82469919': {
    errorName: 'UserAlreadyClaimed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x82bf4965': {
    errorName: 'ReleasePeriodNotStarted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x327269a7': {
    errorName: 'SafeCastOverflowedIntDowncast(uint8,int256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'bits',
          type: 'uint8',
          internalType: 'uint8',
        },
        {
          name: 'value',
          type: 'int256',
          internalType: 'int256',
        },
      ],
    },
  },
  '0xf2be30fb': {
    errorName: 'CallerNotGovernance()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa0949f7a': {
    errorName: 'UnstakingOnEmergencyCooldown()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x3823d0a1': {
    errorName: 'ElectricityFutureAuctionBidMustBeGreaterThanMinimumBid()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x5fc91d03': {
    errorName: 'RFCPeriodNotEnded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xd9dbda29': {
    errorName: 'AlreadyMintedToCarbonCreditAuction()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x305a27a9': {
    errorName: 'StringTooLong(string)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'str',
          type: 'string',
          internalType: 'string',
        },
      ],
    },
  },
  '0x5c6d7b73': {
    errorName: 'IdenticalTokens()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x11e3defc': {
    errorName: 'ProposalHashesNotUpdated()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6970aec5': {
    errorName: 'BucketNotFinalized()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe8adc5eb': {
    errorName: 'SlashedAgentCannotClaimReward()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xcc0b0eab': {
    errorName: 'InsufficientLiquidityMinted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x94280d62': {
    errorName: 'ERC20InvalidSpender(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'spender',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0xde0bf924': {
    errorName: 'AlreadyWithdrawnFromHolding()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x005694cd': {
    errorName: 'ElectricityFuturesAuctionEnded()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x6bab6ded': {
    errorName: 'CommitAllowanceUnderflow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xac990dde': {
    errorName: 'UnstakeAmountExceedsStakedBalance()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x80110b87': {
    errorName: 'IdenticalTokens()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xcbc5bb9f': {
    errorName: 'ProposalNotInitialized()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xf45bb089': {
    errorName: 'CommitSignatureInvalid()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x96c6fd1e': {
    errorName: 'ERC20InvalidSender(address)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'sender',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
  },
  '0x5506e58c': {
    errorName: 'ProposalHashDoesNotMatch()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xeaab93be': {
    errorName: 'BucketAlreadyMinted()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x227bc153': {
    errorName: 'MathOverflowedMulDiv()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xaecfbab6': {
    errorName: 'AddressAlreadySet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x9d622343': {
    errorName: 'CompensationPlanLengthMustBeGreaterThanZero()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xc3b6aa62': {
    errorName: 'CannotStakeZeroTokens()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x046e6d00': {
    errorName: 'NominationCostGreaterThanAllowance()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x203d82d8': {
    errorName: 'Expired()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x1e6a2935': {
    errorName: 'MaximumNumberOfGCAS()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa7f69732': {
    errorName: 'AlreadyMintedToCarbonCreditAuction()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x4b9c8937': {
    errorName: 'ErrNotVetoCouncilMember()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x2c5211c6': {
    errorName: 'InvalidAmount()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe450d38c': {
    errorName: 'ERC20InsufficientBalance(address,uint256,uint256)',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [
        {
          name: 'sender',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'balance',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'needed',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
  },
  '0x969bf728': {
    errorName: 'NothingToClaim()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xc27cd771': {
    errorName: 'VetoMemberCannotBeNullAddress()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x67abc29b': {
    errorName: 'SafeTransferFailed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xafaace5c': {
    errorName: 'InsufficientClaimableBalance()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x84f4500a': {
    errorName: 'ErrIsContract()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xe583e1d1': {
    errorName: 'MinerPoolAlreadySet()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xc7a184f7': {
    errorName: 'CallerNotVetoCouncilMember()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xa00141bd': {
    errorName: 'InsufficientRatifyOrRejectVotes()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x8bb22f59': {
    errorName: 'MustIncreaseCommitAllowanceByAtLeastOne()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xfdbe8876': {
    errorName: 'BucketIndexOutOfBounds()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0xbf4cce15': {
    errorName: 'NotEnoughGCCForSale()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x633b5e7f': {
    errorName: 'DuplicateAddressNotAllowed()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x0c882fc0': {
    errorName: 'PrecisionLossLeadToUnderflow()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x1b05f4bd': {
    errorName: 'VetoCouncilProposalCreationOldMemberCannotEqualNewMember()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
  '0x0513cd7a': {
    errorName: 'CannotBuyZeroUnits()',
    solidityMessageAndArgs: {
      errorMessage: '',
      args: [],
    },
  },
};
